{"ast":null,"code":"import _defineProperty from\"/Users/ruslanshuranov/WebstormProjects/react-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/ruslanshuranov/WebstormProjects/react-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ruslanshuranov/WebstormProjects/react-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ruslanshuranov/WebstormProjects/react-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ruslanshuranov/WebstormProjects/react-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classes from'./Quiz.module.scss';import ActiveQuiz from'../../components/ActiveQuiz/ActiveQuiz';import FinishedQuiz from'../../components/FinishedQuiz/FinishedQuiz';var Quiz=/*#__PURE__*/function(_Component){_inherits(Quiz,_Component);var _super=_createSuper(Quiz);function Quiz(){var _this;_classCallCheck(this,Quiz);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeQuestionNumber:0,isFinished:false,results:{},answers:'',quiz:[{id:1,question:'Who is the Patron Saint of Spain?',rightAnswerId:1,answers:[{id:1,text:'St James'},{id:2,text:'St John'},{id:3,text:'St Benedict'}]},{id:2,question:'Which of these means a speech in a play where a character talks to themselves rather than to other characters?',rightAnswerId:2,answers:[{id:1,text:'Interlude'},{id:2,text:'Revue'},{id:3,text:'Soliloquy'}]},{id:3,question:'In the Vicar of Dibley, what was the name of the vicar\\'s clueless friend?',rightAnswerId:2,answers:[{id:1,text:'Beatrice'},{id:2,text:'Charlotte'},{id:3,text:'Alice'}]},{id:4,question:'Casterly Rock is the ancestral home of which family in Game of Thrones?',rightAnswerId:1,answers:[{id:1,text:'The Starks'},{id:2,text:'The Tully\\'s'},{id:3,text:'The Lannisters'}]}]};_this.onAnswerClickHandler=function(answerId){if(_this.state.answers){var key=Object.keys(_this.state.answers)[0];if(_this.state.answers[key]==='success'){return;}}var question=_this.state.quiz[_this.state.activeQuestionNumber];var results=_this.state.results;if(question.rightAnswerId===answerId){if(!results[answerId]){results[answerId]='success';}_this.setState({answers:_defineProperty({},answerId,'success'),results:results});var timeout=window.setTimeout(function(){if(_this.isQuizFinished()){_this.setState({isFinished:true});}else{_this.setState({activeQuestionNumber:_this.state.activeQuestionNumber+1,answers:''});}window.clearTimeout(timeout);},1000);}else{results[question.id]='error';_this.setState({answers:_defineProperty({},answerId,'error'),results:results});}};_this.retryHandler=function(){_this.setState({activeQuestionNumber:0,answers:null,isFinished:false,results:{}});};return _this;}_createClass(Quiz,[{key:\"isQuizFinished\",value:function isQuizFinished(){return this.state.activeQuestionNumber+1===this.state.quiz.length;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:classes.Quiz},/*#__PURE__*/React.createElement(\"div\",{className:classes.QuizWrapper},/*#__PURE__*/React.createElement(\"h1\",null,\"Answer on the above question\"),this.state.isFinished?/*#__PURE__*/React.createElement(FinishedQuiz,{onRetry:this.retryHandler,results:this.state.results,quiz:this.state.quiz}):/*#__PURE__*/React.createElement(ActiveQuiz,{onAnswerClick:this.onAnswerClickHandler,answers:this.state.quiz[this.state.activeQuestionNumber].answers,question:this.state.quiz[this.state.activeQuestionNumber].question,quizLength:this.state.quiz.length,questionNumber:this.state.activeQuestionNumber+1,userAnswers:this.state.answers})));}}]);return Quiz;}(Component);export{Quiz as default};","map":{"version":3,"sources":["/Users/ruslanshuranov/WebstormProjects/react-quiz/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","Quiz","state","activeQuestionNumber","isFinished","results","answers","quiz","id","question","rightAnswerId","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","QuizWrapper"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\rimport classes from './Quiz.module.scss'\rimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\rimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\rexport default class Quiz extends Component {\r  state = {\r    activeQuestionNumber: 0,\r    isFinished: false,\r    results: {},\r    answers: '',\r    quiz: [\r      {\r        id: 1,\r        question: 'Who is the Patron Saint of Spain?',\r        rightAnswerId: 1,\r        answers: [\r          {id: 1, text: 'St James'},\r          {id: 2, text: 'St John'},\r          {id: 3, text: 'St Benedict'}\r        ]\r      },\r      {\r        id: 2,\r        question: 'Which of these means a speech in a play where a character talks to themselves rather than to other characters?',\r        rightAnswerId: 2,\r        answers: [\r          {id: 1, text: 'Interlude'},\r          {id: 2, text: 'Revue'},\r          {id: 3, text: 'Soliloquy'}\r        ]\r      },\r      {\r        id: 3,\r        question: 'In the Vicar of Dibley, what was the name of the vicar\\'s clueless friend?',\r        rightAnswerId: 2,\r        answers: [\r          {id: 1, text: 'Beatrice'},\r          {id: 2, text: 'Charlotte'},\r          {id: 3, text: 'Alice'}\r        ]\r      },\r      {\r        id: 4,\r        question: 'Casterly Rock is the ancestral home of which family in Game of Thrones?',\r        rightAnswerId: 1,\r        answers: [\r          {id: 1, text: 'The Starks'},\r          {id: 2, text: 'The Tully\\'s'},\r          {id: 3, text: 'The Lannisters'}\r        ]\r      }\r    ]\r  }\r\r  onAnswerClickHandler = answerId => {\r    if (this.state.answers) {\r      const key = Object.keys(this.state.answers)[0]\r      if (this.state.answers[key] === 'success') {\r        return;\r      }\r    }\r\r    const question = this.state.quiz[this.state.activeQuestionNumber];\r    const results = this.state.results;\r    if (question.rightAnswerId === answerId) {\r      if (!results[answerId]) {\r        results[answerId] = 'success'\r      }\r      this.setState({\r        answers: {[answerId]: 'success'},\r        results\r      });\r      const timeout = window.setTimeout(() => {\r        if (this.isQuizFinished()) {\r          this.setState({\r            isFinished: true\r          })\r        } else {\r          this.setState({\r            activeQuestionNumber: this.state.activeQuestionNumber + 1,\r            answers: ''\r          });\r        }\r        window.clearTimeout(timeout);\r      }, 1000);\r    } else {\r      results[question.id] = 'error';\r      this.setState({\r        answers: {[answerId]: 'error'},\r        results\r      })\r    }\r  }\r\r  retryHandler = () => {\r    this.setState({\r      activeQuestionNumber: 0,\r      answers: null,\r      isFinished: false,\r      results: {}\r    })\r  }\r\r  isQuizFinished() {\r    return this.state.activeQuestionNumber + 1 === this.state.quiz.length;\r  }\r\r  render() {\r    return (\r      <div className={classes.Quiz}>\r        <div className={classes.QuizWrapper}>\r          <h1>Answer on the above question</h1>\r          {\r            this.state.isFinished\r              ? <FinishedQuiz\r                onRetry={this.retryHandler}\r                results={this.state.results}\r                quiz={this.state.quiz}/>\r              : <ActiveQuiz\r                onAnswerClick={this.onAnswerClickHandler}\r                answers={this.state.quiz[this.state.activeQuestionNumber].answers}\r                question={this.state.quiz[this.state.activeQuestionNumber].question}\r                quizLength={this.state.quiz.length}\r                questionNumber={this.state.activeQuestionNumber + 1}\r                userAnswers={this.state.answers}/>\r          }\r        </div>\r      </div>\r    )\r  }\r}\r"]},"metadata":{},"sourceType":"module"}